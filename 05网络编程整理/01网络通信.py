'''
网络编程：socket
大纲：通信三要素、socket通信步骤、远程执行命令思想、粘包现象、文件上传
--------------------------------------------------------------------------------------------------------------------
通信三要素：
    IP地址、端口号、协议(TCP/UDP)
--------------------------------------------------------------------------------------------------------------------
socket通信步骤：
    1.建立连接：
        服务器：socket--->address--->bind--->listen--->accept
        客户端：socket--->connect
    2.通信：
        一收一发：recv(1024)<--------------------send(byte)/sendall(byte)
    3.关闭连接：
        close()
Server下的方法：
    socket()        #相关参数：family=AF_INET(ipv4)/AF_INET6(ipv6)/AF_UNIX(nuix进程间通信)
                               type=SOCK_STREAM(TCP)/SOCK_Dgram(UDP)
    bind()          #相关参数：address=(ip地址,端口号)
    listen(5)       #相关说明：定义最大等待数量
    accept()        #相关说明：建立连接阻塞，等待客户端连接，并获取客户端socket对象
Client下的方法：
    socket()        #相关参数：family=AF_INET(ipv4)/AF_INET6(ipv6)/AF_UNIX(nuix进程间通信)
                               type=SOCK_STREAM(TCP)/SOCK_Dgram(UDP)
    connect()       #相关参数：address=(ip地址，端口号)  ip地址为：str     端口号为：int
--------------------------------------------------------------------------------------------------------------------
远程执行命令思想:
    与编写数据库存储过程类似
--------------------------------------------------------------------------------------------------------------------
粘包现象：
    原因：
        由于一次发送的数据太少，会将两次数据发送的数据合并到一次发送，导致接收端出现错误
    解决方法：
        在两次方法中间插入一个接受方法
--------------------------------------------------------------------------------------------------------------------
文件上传思想：
    1.建立服务器端和客户端连接
    2.获取文件的：名称、大小(长度)、路径(客户端是文件路径，服务器端是存储路径)
    3.进行文件传输，一读一写
'''